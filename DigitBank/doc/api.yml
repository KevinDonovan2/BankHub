openapi : 3.0.3
info :
  title : DigitBank API
  version : 2.1.0
  description: |
    Project app for PROG4 cours by : 
    Lovatiana (STD22045),
    Donovan (STD22046),
    Mampionon (STD22038)

servers:
  - url: https://app.digitbank.mg
tags:
  - name: Accounts
  - name: Transactions
  - name: Balance

paths:

  /accounts:
    get:
      tags:
        - "Accounts"
      summary: Get all Account
      operationId: getAccounts
      responses:
        200:
          description: Return list of account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accounts'

    post:
      tags:
        - "Accounts"
      summary: Create account
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Accounts'
      responses:
        200:
          description: Return an/list account(s) created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accounts'


  /accounts/{id}:
    get:
      tags:
        - "Accounts"
      summary: Get account by id
      operationId: getAccount
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'

    put:
      tags:
        - "Accounts"
      summary: Update account by id
      operationId: updateAccount
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Accounts'
      responses:
        200:
          description: Return an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'


  /transactions:
    get:
      tags:
        - "Transactions"
      summary: Get all transctions
      operationId: getTransctions
      responses:
        200:
          description: Return list of transctions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  /transactions/transfert:
    post:
      tags:
        - "Transactions"
      summary: Create transction(s)
      operationId: createTransfert
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
      responses:
        200:
          description: Return a/list of transaction(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

    get:
      tags:
        - "Transactions"
      summary: Get all transction(s)
      operationId: getTransferts
      responses:
        200:
          description: Return a/list of transaction(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  /balance/{accountid}:
    get:
      tags:
        - "Balance"
      summary: Get all balance about an account
      operationId: getAllBalanceByAccountId
      parameters:
        - in: path
          name: accountid
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: startDateTime
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: endDateTime
          required: false
          schema:
            type: string
            format: datetime
      responses:
        200:
          description: Return a list of balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    format: double
                  loan:
                    type: number
                    format: double
                  loanInterest:
                    type: number
                    format: double

  /balance/history/{accountid}:
    get:
      tags:
        - "Balance"
      summary: Get all balance about an account
      operationId: getBalancesByAccountId
      parameters:
        - in: path
          name: accountid
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: startDateTime
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: endDateTime
          required: false
          schema:
            type: string
            format: datetime
      responses:
        200:
          description: Return a list of balance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WithdrawalInput'

components:
  schemas:
    Accounts:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the account
        name:
          type: string
          description: Name of the client
        first_name:
          type: string
          description: First name(s) of the client
        date_of_birth:
          type: string
          format: date
          description: Date of birth of the client (in YYYY-MM-DD format)
        monthly_net_salary:
          type: number
          description: Client's monthly net salary
      required:
        - name
        - first_name
        - date_of_birth
        - monthly_net_salary
    AccountInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the client
        first_name:
          type: string
          description: First name(s) of the client
        date_of_birth:
          type: string
          format: date
          description: Date of birth of the client (in YYYY-MM-DD format)
        monthly_net_salary:
          type: number
          description: Client's monthly net salary
      required:
        - name
        - first_name
        - date_of_birth
        - monthly_net_salary
    Transaction:
      type: object
      properties:
        amount:
          type: number
          description: Transfer amount
        beneficiary:
          type: string
          description: ID of the beneficiary account
        reason:
          type: string
          description: Reason for the transfer
      required:
        - amount
        - beneficiary
        - reason
    CreateCategory:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
    WithdrawalInput:
      type: object
      properties:
        amount:
          type: number
          description: Withdrawal amount
        source_account:
          type: string
          description: ID of the account from which to withdraw
        date_time:
          type: string
          format: date-time
          description: Date and time of the withdrawal
      required:
        - amount
        - source_account
        - date_time